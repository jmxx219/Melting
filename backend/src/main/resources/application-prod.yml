spring:
  application:
    name: melting
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    show-sql: true
    defer-datasource-initialization: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-authentication-method: client_secret_post
            client-id: ${OAUTH2_KAKAO_CLIENT_ID}
            client-secret: ${OAUTH2_KAKAO_CLIENT_SECRET}
            redirect-uri: https://j11a701.p.ssafy.io/oauth2/login/code/kakao
            authorization-grant-type: authorization_code
            scope:
              - account_email
          google:
            client-name: google
            client-id: ${OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: https://j11a701.p.ssafy.io/oauth2/login/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account
  mvc:
    problem details:
      enabled: true
  data:
    redis:
      host: redis
      port: 6379
      redisson-prefix: redis://
      password: ${REDIS_PASSWORD}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  jwt:
    secret: ${JWT_SECRET}
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always

fastapi:
  baseurl: ${FASTAPI_BASEURL}

logging:
  level:
    com:
      dayangsung:
        melting: debug
    web: debug

cloud:
  aws:
    s3:
      bucket: ${CLOUD_AWS_S3_BUCKET}
    region:
      static: ap-northeast-2
      auto: false
    credentials:
      access key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
      secret key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
    stack:
      auto: false

openai:
  api-key: ${OPENAI_API_KEY}

server:
  tomcat:
    connection-timeout: 30000

mattermost-logger:
  base-url: ${ERROR_WEBHOOK_URL}